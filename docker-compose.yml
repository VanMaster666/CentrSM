services:
  frontend:
    container_name: centrsm-frontend
    image: front
    build:
      context: .
      dockerfile: front_dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - database  
      - backend
  backend:
    container_name: centrsm-backend
    image: back
    build:
      context: .
      dockerfile: back_dockerfile
    ports:
      - "5000:5000"
    depends_on:
      - database
  database:
      image: postgres:latest
      container_name: database
      environment:
        POSTGRES_USER: postgres_user
        POSTGRES_PASSWORD: postgres_password
        POSTGRES_DB: postgres_db
        PGDATA: /var/lib/postgresql/data/pgdata
      ports:
        - "5432:5432"
      volumes:
        - ./Database/pgdata:/var/lib/postgresql/data/pgdata
      deploy:
        resources:
          limits:
            cpus: '0.50'
            memory: 512M
          reservations:
            cpus: '0.25'
            memory: 256M
      command: >
        postgres -c max_connections=1000
                -c shared_buffers=256MB
                -c effective_cache_size=768MB
                -c maintenance_work_mem=64MB
                -c checkpoint_completion_target=0.7
                -c wal_buffers=16MB
                -c default_statistics_target=100
      healthcheck:
        test: [ "CMD-SHELL", "pg_isready -U postgres_user -d postgres_db" ]
        interval: 30s
        timeout: 10s
        retries: 5
      restart: unless-stopped
      tty: true
      stdin_open: true
volumes:
  pgdata:
    driver: local
